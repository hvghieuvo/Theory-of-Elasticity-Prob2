
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage, END, messagebox
import numpy as np
import matplotlib.pyplot as plt
import numpy as np
from source2 import source2_calc
from mohr_circle3d import plot_mohr3d

# ======================== Function ========================

np.set_printoptions(precision=4, suppress=True)

def on_closing(event=0):
    window.destroy()
    
def get_input():
    ox = entry_ox.get()
    oy = entry_oy.get()
    oz = entry_oz.get()
    txy = entry_txy.get()
    txz = entry_txz.get()
    tyz = entry_tyz.get()
    E = entry_module_e.get()
    v = entry_poisson.get()
    if not all((ox, oy, oz, txy, txz, tyz, E, v)):
        messagebox.showerror("Lỗi", "Hãy nhập đầy đủ các thông số!")
        return
    else:
        ox = float(ox)
        oy = float(oy)
        oz = float(oz)
        txy = float(txy)
        txz = float(txz)
        tyz = float(tyz)
        E = float(E)
        v = float(v)
        return ox, oy, oz, txy, txz, tyz, E, v

def calc():
    entry_output.delete('1.0', 'end')
    ox, oy, oz, txy, txz, tyz, E, v = get_input()
    stress_array = np.array([[ox, txy, txz], 
                            [txy, oy, tyz], 
                            [txz, tyz, oz]])
    stress_tensor = np.reshape(stress_array, (3, 3))
    I1, I2, I3, o1, o2, o3, p1, p2, p3, hydro_stress, spherical_stress_tensor, dev_spherical_stress_tensor, strain_tensor = source2_calc(stress_tensor, E, v)
    entry_output.insert(END, f"I1 = {I1:.4f}\n")
    entry_output.insert(END, f"I2 = {I2:.4f}\n")
    entry_output.insert(END, f"I3 = {I3:.4f}\n")
    # entry_output.insert(END, f"stress_array = \n{np.array2string(stress_array, precision=4, separator=', ', suppress_small=True)}\n")
    entry_output.insert(END, f"o1 = {o1:.4f}\n")
    entry_output.insert(END, f"o2 = {o2:.4f}\n")
    entry_output.insert(END, f"o3 = {o3:.4f}\n")
    entry_output.insert(END, f"p1 = {np.array2string(p1, precision=4, separator=', ')}\n")
    entry_output.insert(END, f"p2 = {np.array2string(p2, precision=4, separator=', ')}\n")
    entry_output.insert(END, f"p3 = {np.array2string(p3, precision=4, separator=', ')}\n")
    entry_output.insert(END, f"hydro_stress = {hydro_stress:.4f}\n")
    entry_output.insert(END, f"spherical_stress_tensor = \n{np.array2string(spherical_stress_tensor, precision=4, separator=', ', suppress_small=True)}\n")
    entry_output.insert(END, f"dev_spherical_stress_tensor = \n{np.array2string(dev_spherical_stress_tensor, precision=4, separator=', ', suppress_small=True)}\n")
    entry_output.insert(END, f"strain_tensor = \n{np.array2string(strain_tensor, precision=4, separator=', ', suppress_small=True)}\n")
    
def plot():
    ox, oy, oz, txy, txz, tyz, E, v = get_input()
    stress_array = np.array([[ox, txy, txz], 
                            [txy, oy, tyz], 
                            [txz, tyz, oz]])
    stress_tensor = np.reshape(stress_array, (3, 3))
    plt.figure()
    plot_mohr3d(stress_tensor)
    
# ======================== GUI ========================

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r".\assets\frame0")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


window = Tk()

window.geometry("915x460")
window.title("D2Ht Project - by Reisen")
window.configure(bg = "#141313")
window.protocol("WM_DELETE_WINDOW", on_closing)

canvas = Canvas(
    window,
    bg = "#141313",
    height = 460,
    width = 915,
    bd = 0,
    highlightthickness = 0,
    relief = "ridge")

canvas.place(x = 0, y = 0)
canvas.create_rectangle(
    19.0,
    10.0,
    990.0,
    495.0,
    fill="#141313",
    outline="")

canvas.create_text(
    34.0,
    29.0,
    anchor="nw",
    text="D2HT Team - Problem 2: ",
    fill="#49A5F9",
    font=("RobotoRoman ExtraBold", 32 * -1))

canvas.create_rectangle(
    67.0,
    70.0,
    344.0,
    72.0,
    fill="#49A5F9",
    outline="")

canvas.create_text(
    34.0,
    109.0,
    anchor="nw",
    text="Nhập số liệu:",
    fill="#FFFFFF",
    font=("RobotoRoman ExtraBold", 20 * -1))

# ======================== σ input ========================
canvas.create_text(
    34.0,
    171.0,
    anchor="nw",
    text="σ_x",
    fill="#FFFFFF",
    font=("RobotoRoman ExtraBold", 15 * -1))

entry_image_ox = PhotoImage(
    file=relative_to_assets("entry_1.png"))
entry_bg_1 = canvas.create_image(
    104.0,
    180.0,
    image=entry_image_ox)
entry_ox = Entry(
    bd=0,
    bg="#D9D9D9",
    fg="#000716",
    highlightthickness=0)
entry_ox.configure(font=("Roboto", 11))
entry_ox.place(
    x=89.0,
    y=165.0,
    width=30.0,
    height=28.0)

canvas.create_text(
    174.0,
    171.0,
    anchor="nw",
    text="σ_y",
    fill="#FFFFFF",
    font=("RobotoRoman ExtraBold", 15 * -1))

entry_image_oy = PhotoImage(
    file=relative_to_assets("entry_2.png"))
entry_bg_2 = canvas.create_image(
    244.0,
    180.0,
    image=entry_image_oy)
entry_oy = Entry(
    bd=0,
    bg="#D9D9D9",
    fg="#000716",
    highlightthickness=0)
entry_oy.configure(font=("Roboto", 11))
entry_oy.place(
    x=229.0,
    y=165.0,
    width=30.0,
    height=28.0)

canvas.create_text(
    314.0,
    171.0,
    anchor="nw",
    text="σ_z",
    fill="#FFFFFF",
    font=("RobotoRoman ExtraBold", 15 * -1))

entry_image_oz = PhotoImage(
    file=relative_to_assets("entry_3.png"))
entry_bg_3 = canvas.create_image(
    384.0,
    180.0,
    image=entry_image_oz)
entry_oz = Entry(
    bd=0,
    bg="#D9D9D9",
    fg="#000716",
    highlightthickness=0)
entry_oz.configure(font=("Roboto", 11))
entry_oz.place(
    x=369.0,
    y=165.0,
    width=30.0,
    height=28.0)

# ======================== τ input ========================
canvas.create_text(
    34.0,
    239.0,
    anchor="nw",
    text="τ_xy",
    fill="#FFFFFF",
    font=("RobotoRoman ExtraBold", 15 * -1))

entry_image_txy = PhotoImage(
    file=relative_to_assets("entry_4.png"))
entry_bg_txy = canvas.create_image(
    104.0,
    248.0,
    image=entry_image_txy)
entry_txy = Entry(
    bd=0,
    bg="#D9D9D9",
    fg="#000716",
    highlightthickness=0)
entry_txy.configure(font=("Roboto", 11))
entry_txy.place(
    x=89.0,
    y=233.0,
    width=30.0,
    height=28.0)

canvas.create_text(
    174.0,
    239.0,
    anchor="nw",
    text="τ_xz",
    fill="#FFFFFF",
    font=("RobotoRoman ExtraBold", 15 * -1))

entry_image_txz = PhotoImage(
    file=relative_to_assets("entry_7.png"))
entry_bg_txz = canvas.create_image(
    244.0,
    248.0,
    image=entry_image_txz)
entry_txz = Entry(
    bd=0,
    bg="#D9D9D9",
    fg="#000716",
    highlightthickness=0)
entry_txz.configure(font=("Roboto", 11))
entry_txz.place(
    x=229.0,
    y=233.0,
    width=30.0,
    height=28.0)

canvas.create_text(
    314.0,
    239.0,
    anchor="nw",
    text="τ_yz",
    fill="#FFFFFF",
    font=("RobotoRoman ExtraBold", 15 * -1))

entry_image_tyz = PhotoImage(
    file=relative_to_assets("entry_8.png"))
entry_bg_tyz = canvas.create_image(
    384.0,
    248.0,
    image=entry_image_tyz)
entry_tyz = Entry(
    bd=0,
    bg="#D9D9D9",
    fg="#000716",
    highlightthickness=0)
entry_tyz.configure(font=("Roboto", 11))
entry_tyz.place(
    x=369.0,
    y=233.0,
    width=30.0,
    height=28.0)

# ======================== Module đàn hồi E ========================
canvas.create_text(
    35.0,
    301.0,
    anchor="nw",
    text="Module đàn hồi E: ",
    fill="#FFFFFF",
    font=("RobotoRoman ExtraBold", 15 * -1))

entry_image_module_e = PhotoImage(
    file=relative_to_assets("entry_5.png"))
entry_bg_5 = canvas.create_image(
    198.0,
    311.0,
    image=entry_image_module_e)
entry_module_e = Entry(
    bd=0,
    bg="#D9D9D9",
    fg="#000716",
    highlightthickness=0)
entry_module_e.configure(font=("Roboto", 11))
entry_module_e.place(
    x=183.0,
    y=296.0,
    width=30.0,
    height=28.0)

# ======================== Poisson v ========================
canvas.create_text(
    275.0,
    301.0,
    anchor="nw",
    text="Poisson v: ",
    fill="#FFFFFF",
    font=("RobotoRoman ExtraBold", 15 * -1))

entry_image_poisson = PhotoImage(
    file=relative_to_assets("entry_6.png"))
entry_bg_6 = canvas.create_image(
    384.0,
    310.0,
    image=entry_image_poisson)
entry_poisson = Entry(
    bd=0,
    bg="#D9D9D9",
    fg="#000716",
    highlightthickness=0)
entry_poisson.configure(font=("Roboto", 11))
entry_poisson.place(
    x=369.0,
    y=295.0,
    width=30.0,
    height=28.0)

# ======================== Line 1 ========================
canvas.create_rectangle(
    457.0,
    20.0,
    460.0,
    424.9999694824219,
    fill="#49A5F9",
    outline="")

# ======================== Line 2 ========================
canvas.create_rectangle(
    487.0,
    78.0,
    599.0,
    80.0,
    fill="#4AA5FA",
    outline="")

# ======================== Output here ========================
canvas.create_text(
    500.0,
    47.0,
    anchor="nw",
    text="Kết quả:",
    fill="#FFFFFF",
    font=("RobotoRoman ExtraBold", 20 * -1))

entry_output_img = PhotoImage(
    file=relative_to_assets("entry_9.png"))
entry_bg_9 = canvas.create_image(
    695.0,
    263.0,
    image=entry_output_img)
entry_output = Text(
    bd=0,
    bg="#D9D9D9",
    fg="#000716",
    highlightthickness=0)
entry_output.configure(font=("Roboto", 13))
entry_output.place(
    x=533.0,
    y=112.0,
    width=324.0,
    height=300.0)

# ======================== Button Calc ========================
button_image_1 = PhotoImage(
    file=relative_to_assets("button_1.png"))
button_calc = Button(
    image=button_image_1,
    borderwidth=1,
    highlightthickness=0,
    command=lambda: calc(),
    relief="flat")
button_calc.place(
    x=39.0,
    y=368.0,
    width=150.0,
    height=48.0)

# ======================== Button Plot ========================
button_image_2 = PhotoImage(
    file=relative_to_assets("button_2.png"))
button_plot = Button(
    image=button_image_2,
    borderwidth=1,
    highlightthickness=0,
    command=lambda: plot(),
    relief="flat")
button_plot.place(
    x=257.0,
    y=368.0,
    width=150.0,
    height=48.0)


window.resizable(False, False)
window.mainloop()
